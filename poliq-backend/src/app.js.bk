// src/app.js (or your main Express app file)
const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');
const cookieParser = require('cookie-parser'); // Add this dependency
const { connectionLogger } = require('./utils/connectionLogger');
const apiRoutes = require('./api/routes');
const { logger } = require('./utils/logger');

// Create Express app
const app = express();

// Middleware
app.use(cors({
  // Allow requests from any origin in development
  origin: true,
  // Allow credentials (cookies, authorization headers)
  credentials: true,
  // Allow these HTTP methods
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  // Allow these headers
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
}));
app.use(helmet());
app.use(compression());
app.use(cookieParser()); // Add cookie parser before the connection logger
app.use(connectionLogger); // Add our custom connection logger
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Routes
app.get('/', (req, res) => {
  res.json({ message: 'Welcome to PoliQ Backend API' });
});

// API Routes
app.use('/api', apiRoutes);

// Error handling middleware
app.use((err, req, res, next) => {
  logger.error(err.stack);
  
  res.status(err.status || 500).json({
    error: {
      message: err.message || 'Internal Server Error',
    },
  });
});

module.exports = app;
